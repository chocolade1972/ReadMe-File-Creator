using System;
using System.IO;
using UnityEditor;
using UnityEngine;

public class ReadmeFileCreator : Editor
{
    [MenuItem("Assets/Create/ReadMe File", false, 81)]
    private static void CreateReadMeFile()
    {
        // Get the selected folder path in the Project view
        string path = AssetDatabase.GUIDToAssetPath(Selection.assetGUIDs[0]);

        // Ensure the selected path is a folder
        if (!AssetDatabase.IsValidFolder(path))
        {
            Debug.LogError("Please select a valid folder in the Project view.");
            return;
        }

        // Set the file name based on the folder name
        string folderName = Path.GetFileName(path);
        string fileName = folderName + ".md"; // Create a Markdown file
        string filePath = Path.Combine(path, fileName);

        // Check if the ReadMe file already exists
        if (!File.Exists(filePath))
        {
            // Create the ReadMe file with initial content
            File.WriteAllText(filePath, FormatReadMeContent(folderName));
            AssetDatabase.Refresh(); // Refresh to show the file in Unity
            Debug.Log($"ReadMe file '{fileName}' created successfully in: {path}");

            // Prompt the user to open the file
            if (EditorUtility.DisplayDialog("ReadMe File Created", $"The file '{fileName}' has been created.\nWould you like to open it now?", "Yes", "No"))
            {
                OpenFileInDefaultEditor(filePath); // Open the file in the default editor
            }
        }
        else
        {
            Debug.LogWarning($"A ReadMe file already exists in the folder: {path}");
        }
    }

    [MenuItem("Assets/Open with Notepad", true)]
    private static bool ValidateOpenWithNotepad()
    {
        // Validate that a file is selected and it has the correct extension
        if (Selection.activeObject != null)
        {
            string path = AssetDatabase.GetAssetPath(Selection.activeObject);
            string extension = Path.GetExtension(path).ToLower();
            return extension == ".md" || extension == ".txt";
        }
        return false;
    }

    [MenuItem("Assets/Open with Notepad")]
    private static void OpenSelectedFileWithNotepad()
    {
        if (Selection.activeObject != null)
        {
            string path = AssetDatabase.GetAssetPath(Selection.activeObject);
            OpenFileInDefaultEditor(path);
        }
    }

    // Method to generate a detailed Markdown content
    private static string FormatReadMeContent(string folderName)
    {
        string timestamp = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");

        return $"# {folderName}\n\n" +
               $"_Generated on {timestamp}_\n\n" +
               "## Table of Contents\n" +
               "- [Introduction](#introduction)\n" +
               "- [Instructions](#instructions)\n" +
               "- [Examples](#examples)\n" +
               "- [Notes](#notes)\n\n" +
               "## Introduction\n" +
               $"Welcome to the `{folderName}` project. This file provides information and guidelines for working with this folder.\n\n" +
               "## Instructions\n" +
               "1. Describe the purpose of this folder.\n" +
               "2. Add your custom instructions here.\n" +
               "3. Provide links to additional resources or files.\n\n" +
               "## Examples\n" +
               "```csharp\n" +
               "// Example code snippet\n" +
               "Debug.Log(\"Hello, World!\");\n" +
               "```\n\n" +
               "## Notes\n" +
               "- Use this space for important notes.\n" +
               "- Add any dependencies or requirements.\n" +
               "- Ensure consistency in documentation.\n\n" +
               "## Contact\n" +
               "For more details, contact the development team.\n\n" +
               "---\n" +
               "_File generated by ReadMeFileCreator_";
    }

    // Method to open the file in the default text editor
    private static void OpenFileInDefaultEditor(string filePath)
    {
        try
        {
            string editorPath = "notepad.exe"; // Replace with the actual path to your editor
            System.Diagnostics.Process.Start(new System.Diagnostics.ProcessStartInfo
            {
                FileName = editorPath,
                Arguments = $"\"{filePath}\"", // Pass the file path as an argument
                UseShellExecute = false
            });
        }
        catch (Exception e)
        {
            Debug.LogError($"Failed to open the file: {filePath}\nError: {e.Message}");
        }
    }
}
